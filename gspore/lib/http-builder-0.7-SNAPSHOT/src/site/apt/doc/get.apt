                                    ------
                                    GET Examples
                                    ------
                                    ------
                                    ------

Simplified GET Request

 HTTPBuilder has convenience methods for <<<GET>>> and <<<{{{post}POST}}>>>
 methods.  Here is a simple HTTP <<<GET>>> which parses the response as a DOM
 object:

%{code-snippet|id=get1|brush=groovy|file=src/site/examples.txt}


 In the above example, we are making a request, and automatically parsing the
 HTML response based on the response's content-type header.  The HTML stream is
 normalized (thanks to {{{http://nekohtml.sourceforge.net/}Neko,}}) and then
 parsed by an
 {{{http://groovy.codehaus.org/Reading+XML+using+Groovy%27s+XmlSlurper}XmlSlurper}}
 for easy DOM traversal.

 We are also taking advantage of HTTPBuilder's
 {{{../apidocs/groovyx/net/http/HTTPBuilder.html#defaultSuccessHandler(groovyx.net.http.HttpResponseDecorator,%20java.lang.Object)}default
 success handler}} since we're not supplying a 'success' response handler
 closure.  The default handler defined by HTTPBuilder (which can be overridden)
 simply returns the parsed response data.

 Next is another <<<GET>>> request, with custom response-handling logic that
 prints the response to <<<System.out>>>:

%{code-snippet|id=get2|brush=groovy|file=src/site/examples.txt}


 In this version, the <<<{{{../apidocs/groovyx/net/http/HTTPBuilder.html#get%28java.util.Map%2C%20groovy.lang.Closure%29}get()}}>>>
 method also accepts a closure, which is interpreted as the 'success' response
 handler.  A failure response (i.e. status code of 400 or greater) is still handled by the builder's
 {{{../apidocs/groovyx/net/http/HTTPBuilder.html#defaultFailureHandler(groovyx.net.http.HttpResponseDecorator)}
 default failure handler}}.

 Additionally, we are telling HTTPBuilder to parse the response as
 <<<ContentType.TEXT>>> - which is a built-in type, handled by the default
 <<<{{{../apidocs/groovyx/net/http/ParserRegistry.html#parseText(org.apache.http.HttpResponse)}
 ParserRegistry}}>>> to automatically create a <<<Reader>>> from the response data.


<<<GET>>> using the <<<request()>>> method

 HTTPBuilder supports a generic <<<request>>> method that can be used to configure
 the request in a fine-grained manner.

%{code-snippet|id=get3|brush=groovy|file=src/site/examples.txt}


 In the above example, a 'request configuration closure' is defined as the final
 argument to the request method.  This closure allows fine-grained configuration
 of the request and response handling behavior.  Within the closure, there are a
 number of properties available via the {{{../apidocs/groovyx/net/http/HTTPBuilder.RequestConfigDelegate.html}closure's delegate}}.
 <<<req>>> is an instance of
 <<<{{{http://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/index.html?org/apache/http/HttpRequest.html}HttpRequest}}>>>
 to directly access the Apache HttpClient API.
